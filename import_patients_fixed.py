#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ CSV —Ñ–∞–π–ª–∞
Fixed import script for existing CSV data
"""

import os
import sys
import csv
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app.services.csv_service import CSVService

def import_patients_from_csv():
    """–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ CSV —Ñ–∞–π–ª–∞"""
    print("üì• –ò–º–ø–æ—Ä—Ç –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –∏–∑ CSV —Ñ–∞–π–ª–∞...")
    
    # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    patients_file = "instance/patients.csv"
    if os.path.exists(patients_file):
        os.remove(patients_file)
        print("üóëÔ∏è –£–¥–∞–ª–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª patients.csv")
    
    csv_service = CSVService()
    source_file = "instance/synthetic_pregnant_patients_1000_with_meds_ndc.csv"
    
    if not os.path.exists(source_file):
        print(f"‚ùå –§–∞–π–ª {source_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    imported_count = 0
    error_count = 0
    
    try:
        with open(source_file, 'r', encoding='utf-8') as f:
            reader = csv.DictReader(f)
            
            for row_num, row in enumerate(reader, 1):
                try:
                    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞
                    patient_data = {
                        'name': row.get('Name', '').strip(),
                        'age': int(row.get('Age', 0)) if row.get('Age') and row.get('Age').strip() else 0,
                        'pregnancy_icd10': row.get('Pregnancy ICD-10', '').strip(),
                        'pregnancy_description': row.get('Pregnancy Description', '').strip(),
                        'comorbidity_icd10': row.get('Comorbidity ICD-10', '').strip(),
                        'comorbidity_description': row.get('Comorbidity Description', '').strip(),
                        'weeks_pregnant': int(row.get('Weeks Pregnant', 0)) if row.get('Weeks Pregnant') and row.get('Weeks Pregnant').strip() else 0,
                        'address': row.get('Address', '').strip(),
                        'zip_code': row.get('ZIP Code', '').strip(),
                        'medications': row.get('Medications', '').strip(),
                        'medication_notes': row.get('Medication Notes', '').strip(),
                        'ndc_codes': row.get('NDC Codes', '').strip(),
                        'between_17_35': bool(int(row.get('Between 17-35', 0))) if row.get('Between 17-35') and row.get('Between 17-35').strip() else False
                    }
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
                    if not patient_data['name'] or not patient_data['zip_code']:
                        print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ {row_num}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è")
                        error_count += 1
                        continue
                    
                    # –°–æ–∑–¥–∞–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞
                    csv_service.create_patient(patient_data)
                    imported_count += 1
                    
                    if imported_count % 100 == 0:
                        print(f"üìä –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ {imported_count} –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤...")
                        
                except (ValueError, TypeError) as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ {row_num}: {e}")
                    error_count += 1
                    continue
                except Exception as e:
                    print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ {row_num}: {e}")
                    error_count += 1
                    continue
        
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ {imported_count} –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤!")
        if error_count > 0:
            print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ {error_count} —Å—Ç—Ä–æ–∫ –∏–∑-–∑–∞ –æ—à–∏–±–æ–∫")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üè• –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ —Å–∏—Å—Ç–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∑–¥–æ—Ä–æ–≤—å–µ")
    print("=" * 60)
    
    success = import_patients_from_csv()
    
    if success:
        print("\nüéâ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å API —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        try:
            csv_service = CSVService()
            patients = csv_service.get_all_patients()
            print(f"üìä –í—Å–µ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: {len(patients)}")
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É: {e}")
    else:
        print("\n‚ùå –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–∞–º–∏.")

if __name__ == '__main__':
    main()
