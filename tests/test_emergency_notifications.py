#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å —Ç—Ä–µ–º—è —É—Ä–æ–≤–Ω—è–º–∏ —Ä–∏—Å–∫–∞
Test for emergency notification system with three risk levels
"""

import requests
import json

BASE_URL = "http://localhost:5000/api"

def test_health_facilities():
    """–¢–µ—Å—Ç API –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏–π"""
    print("\n--- Testing Health Facilities API ---")
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏–π
    response = requests.get(f"{BASE_URL}/health-facilities")
    print(f"Status Code: {response.status_code}")
    print(f"Response: {response.json()}")
    assert response.status_code == 200
    print("‚úÖ Health facilities API passed!")

def test_create_high_risk_patient():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Å –≤—ã—Å–æ–∫–∏–º —Ä–∏—Å–∫–æ–º"""
    print("\n--- Testing High Risk Patient Creation ---")
    
    patient_data = {
        "name": "–í—ã—Å–æ–∫–∏–π –†–∏—Å–∫ –ü–∞—Ü–∏–µ–Ω—Ç–∫–∞",
        "age": 18,  # –ú–æ–ª–æ–¥–æ–π –≤–æ–∑—Ä–∞—Å—Ç = –≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫
        "pregnancy_icd10": "O24.4",
        "pregnancy_description": "Gestational diabetes mellitus",
        "comorbidity_icd10": "I10",
        "comorbidity_description": "Essential hypertension",
        "weeks_pregnant": 35,  # 3 —Ç—Ä–∏–º–µ—Å—Ç—Ä = –≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫
        "address": "123 High Risk Street, Risk City",
        "zip_code": "10001",
        "phone_number": "+7-999-111-11-11",
        "email": "highrisk@example.com"
    }
    
    response = requests.post(f"{BASE_URL}/patients", json=patient_data)
    print(f"Status Code: {response.status_code}")
    print(f"Response: {response.json()}")
    
    assert response.status_code == 201
    assert response.json()['success'] == True
    
    patient = response.json()['patient']
    assert patient['name'] == "–í—ã—Å–æ–∫–∏–π –†–∏—Å–∫ –ü–∞—Ü–∏–µ–Ω—Ç–∫–∞"
    assert patient['age'] == 18
    assert patient['weeks_pregnant'] == 35
    
    print("‚úÖ High risk patient creation passed!")
    return patient['id']

def test_create_medium_risk_patient():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Å–æ —Å—Ä–µ–¥–Ω–∏–º —Ä–∏—Å–∫–æ–º"""
    print("\n--- Testing Medium Risk Patient Creation ---")
    
    patient_data = {
        "name": "–°—Ä–µ–¥–Ω–∏–π –†–∏—Å–∫ –ü–∞—Ü–∏–µ–Ω—Ç–∫–∞",
        "age": 25,  # –°—Ä–µ–¥–Ω–∏–π –≤–æ–∑—Ä–∞—Å—Ç
        "pregnancy_icd10": "O26.9",
        "pregnancy_description": "Pregnancy-related condition, unspecified",
        "comorbidity_icd10": "E03.9",
        "comorbidity_description": "Hypothyroidism, unspecified",
        "weeks_pregnant": 20,  # 2 —Ç—Ä–∏–º–µ—Å—Ç—Ä
        "address": "456 Medium Risk Avenue, Medium City",
        "zip_code": "10002",
        "phone_number": "+7-999-222-22-22",
        "email": "mediumrisk@example.com"
    }
    
    response = requests.post(f"{BASE_URL}/patients", json=patient_data)
    print(f"Status Code: {response.status_code}")
    print(f"Response: {response.json()}")
    
    assert response.status_code == 201
    assert response.json()['success'] == True
    
    patient = response.json()['patient']
    assert patient['name'] == "–°—Ä–µ–¥–Ω–∏–π –†–∏—Å–∫ –ü–∞—Ü–∏–µ–Ω—Ç–∫–∞"
    
    print("‚úÖ Medium risk patient creation passed!")
    return patient['id']

def test_create_low_risk_patient():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Å –Ω–∏–∑–∫–∏–º —Ä–∏—Å–∫–æ–º"""
    print("\n--- Testing Low Risk Patient Creation ---")
    
    patient_data = {
        "name": "–ù–∏–∑–∫–∏–π –†–∏—Å–∫ –ü–∞—Ü–∏–µ–Ω—Ç–∫–∞",
        "age": 28,  # –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç
        "pregnancy_icd10": "O26.9",
        "pregnancy_description": "Pregnancy-related condition, unspecified",
        "weeks_pregnant": 18,  # 2 —Ç—Ä–∏–º–µ—Å—Ç—Ä
        "address": "789 Low Risk Boulevard, Low City",
        "zip_code": "10003",
        "phone_number": "+7-999-333-33-33",
        "email": "lowrisk@example.com"
    }
    
    response = requests.post(f"{BASE_URL}/patients", json=patient_data)
    print(f"Status Code: {response.status_code}")
    print(f"Response: {response.json()}")
    
    assert response.status_code == 201
    assert response.json()['success'] == True
    
    patient = response.json()['patient']
    assert patient['name'] == "–ù–∏–∑–∫–∏–π –†–∏—Å–∫ –ü–∞—Ü–∏–µ–Ω—Ç–∫–∞"
    
    print("‚úÖ Low risk patient creation passed!")
    return patient['id']

def test_emergency_notification_high_risk(patient_id):
    """–¢–µ—Å—Ç —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –≤—ã—Å–æ–∫–æ–≥–æ —Ä–∏—Å–∫–∞"""
    print(f"\n--- Testing Emergency Notification for High Risk (ID: {patient_id}) ---")
    
    response = requests.post(f"{BASE_URL}/emergency-notifications/patient/{patient_id}/assess")
    print(f"Status Code: {response.status_code}")
    print(f"Response: {response.json()}")
    
    assert response.status_code == 200
    assert response.json()['success'] == True
    assert response.json()['risk_level'] == 'high'
    assert response.json()['action_taken'] == 'doctor_called'
    assert 'hospital' in response.json()
    
    print("‚úÖ High risk emergency notification passed!")

def test_emergency_notification_medium_risk(patient_id):
    """–¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è —Å—Ä–µ–¥–Ω–µ–≥–æ —Ä–∏—Å–∫–∞"""
    print(f"\n--- Testing Emergency Notification for Medium Risk (ID: {patient_id}) ---")
    
    response = requests.post(f"{BASE_URL}/emergency-notifications/patient/{patient_id}/assess")
    print(f"Status Code: {response.status_code}")
    print(f"Response: {response.json()}")
    
    assert response.status_code == 200
    assert response.json()['success'] == True
    assert response.json()['risk_level'] == 'medium'
    assert response.json()['action_taken'] == 'enhanced_notification_sent'
    
    print("‚úÖ Medium risk emergency notification passed!")

def test_emergency_notification_low_risk(patient_id):
    """–¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –Ω–∏–∑–∫–æ–≥–æ —Ä–∏—Å–∫–∞"""
    print(f"\n--- Testing Emergency Notification for Low Risk (ID: {patient_id}) ---")
    
    response = requests.post(f"{BASE_URL}/emergency-notifications/patient/{patient_id}/assess")
    print(f"Status Code: {response.status_code}")
    print(f"Response: {response.json()}")
    
    assert response.status_code == 200
    assert response.json()['success'] == True
    assert response.json()['risk_level'] == 'low'
    assert response.json()['action_taken'] == 'standard_notification_sent'
    
    print("‚úÖ Low risk emergency notification passed!")

def test_get_emergency_notifications():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    print("\n--- Testing Get Emergency Notifications ---")
    
    response = requests.get(f"{BASE_URL}/emergency-notifications")
    print(f"Status Code: {response.status_code}")
    print(f"Response: {response.json()}")
    
    assert response.status_code == 200
    assert response.json()['success'] == True
    assert 'notifications' in response.json()
    
    print("‚úÖ Get emergency notifications passed!")

def test_get_emergency_notification_stats():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    print("\n--- Testing Emergency Notification Stats ---")
    
    response = requests.get(f"{BASE_URL}/emergency-notifications/stats")
    print(f"Status Code: {response.status_code}")
    print(f"Response: {response.json()}")
    
    assert response.status_code == 200
    assert response.json()['success'] == True
    assert 'stats' in response.json()
    
    print("‚úÖ Emergency notification stats passed!")

def test_get_pending_notifications():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –æ–∂–∏–¥–∞—é—â–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    print("\n--- Testing Get Pending Notifications ---")
    
    response = requests.get(f"{BASE_URL}/emergency-notifications/pending")
    print(f"Status Code: {response.status_code}")
    print(f"Response: {response.json()}")
    
    assert response.status_code == 200
    assert response.json()['success'] == True
    assert 'notifications' in response.json()
    
    print("‚úÖ Get pending notifications passed!")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üö® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å —Ç—Ä–µ–º—è —É—Ä–æ–≤–Ω—è–º–∏ —Ä–∏—Å–∫–∞")
    print("=" * 70)
    
    try:
        # –¢–µ—Å—Ç API –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏–π
        test_health_facilities()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ —É—Ä–æ–≤–Ω—è–º–∏ —Ä–∏—Å–∫–∞
        high_risk_patient_id = test_create_high_risk_patient()
        medium_risk_patient_id = test_create_medium_risk_patient()
        low_risk_patient_id = test_create_low_risk_patient()
        
        # –¢–µ—Å—Ç —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        test_emergency_notification_high_risk(high_risk_patient_id)
        test_emergency_notification_medium_risk(medium_risk_patient_id)
        test_emergency_notification_low_risk(low_risk_patient_id)
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        test_get_emergency_notifications()
        test_get_emergency_notification_stats()
        test_get_pending_notifications()
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã —Å–∏—Å—Ç–µ–º—ã —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìã –†–µ–∑—é–º–µ:")
        print("   ‚úÖ –í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–≤–æ–Ω–æ–∫ –≤—Ä–∞—á—É")
        print("   ‚úÖ –°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫: –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
        print("   ‚úÖ –ù–∏–∑–∫–∏–π —Ä–∏—Å–∫: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
        print("   ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º–∏ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏")
        print("   ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")
        
    except Exception as e:
        print(f"\n‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª: {e}")
        return False
    
    return True

if __name__ == "__main__":
    main()
