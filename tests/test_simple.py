#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∑–¥–æ—Ä–æ–≤—å–µ
"""

import requests
import json

# URL API
BASE_URL = "http://localhost:5000/api"

def test_health():
    """–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...")
    try:
        response = requests.get(f"{BASE_URL}/health")
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìä –û—Ç–≤–µ—Ç: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_create_patient():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞"""
    print("\nüë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞...")
    
    patient_data = {
        "name": "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞",
        "age": 28,
        "geo_location": "Moscow",
        "zip_code": "101000",
        "conditions_icd10": ["O24.4"],
        "trimester": 2,
        "phone_number": "+7-999-123-45-67",
        "email": "anna@example.com"
    }
    
    try:
        response = requests.post(f"{BASE_URL}/patients", json=patient_data)
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 201:
            patient = response.json()['patient']
            print(f"üë§ –ü–∞—Ü–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω: {patient['name']} (ID: {patient['id']})")
            return patient['id']
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {response.json()}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

def test_assess_risk(patient_id):
    """–¢–µ—Å—Ç –æ—Ü–µ–Ω–∫–∏ —Ä–∏—Å–∫–∞"""
    if not patient_id:
        print("‚ùå –ù–µ—Ç ID –ø–∞—Ü–∏–µ–Ω—Ç–∞ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —Ä–∏—Å–∫–∞")
        return
    
    print(f"\n‚ö†Ô∏è –û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–∞ –¥–ª—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ {patient_id}...")
    
    try:
        response = requests.post(f"{BASE_URL}/assess-risk/{patient_id}")
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            risk_data = response.json()
            print(f"üìä –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: {risk_data['risk_level']}")
            print(f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {risk_data['weather_data']['temperature']}¬∞C")
            print(f"üî• –¢–µ–ø–ª–æ–≤–∞—è –≤–æ–ª–Ω–∞: {'–î–∞' if risk_data['heat_wave_risk'] else '–ù–µ—Ç'}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ü–µ–Ω–∫–∏: {response.json()}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def test_notifications(patient_id):
    """–¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    if not patient_id:
        print("‚ùå –ù–µ—Ç ID –ø–∞—Ü–∏–µ–Ω—Ç–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
        return
    
    print(f"\nüì¨ –ü–æ–ª—É—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ {patient_id}...")
    
    try:
        response = requests.get(f"{BASE_URL}/notifications/{patient_id}")
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            notifications = response.json()['notifications']
            print(f"üì¨ –ù–∞–π–¥–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {len(notifications)}")
            
            for i, notif in enumerate(notifications[:2], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 2
                print(f"  {i}. {notif['message'][:100]}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {response.json()}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üè• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∑–¥–æ—Ä–æ–≤—å–µ")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω
    if not test_health():
        print("\n‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω!")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∫–æ–º–∞–Ω–¥–æ–π: python main.py")
        return
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞
    patient_id = test_create_patient()
    
    if patient_id:
        # –û—Ü–µ–Ω–∏–≤–∞–µ–º —Ä–∏—Å–∫
        test_assess_risk(patient_id)
        
        # –ü–æ–ª—É—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        test_notifications(patient_id)
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main()
